(this["webpackJsonpreact-gl-transition-image-example"]=this["webpackJsonpreact-gl-transition-image-example"]||[]).push([[0],{11:function(e,n,t){},15:function(e,n,t){e.exports=t.p+"static/media/mask.4b652f63.png"},19:function(e,n,t){e.exports=t(34)},34:function(e,n,t){"use strict";t.r(n);t(11);var r=t(0),a=t.n(r),s=t(9),o=t.n(s),c=t(3),i=t(2),l=t(10),u=t.n(l),v=t(18),m=t(12),p=t(1),g=t.n(p),f=t(13),d=t.n(f),h=t(14),x=a.a.forwardRef((e,n)=>{var t=e.className,r=e.src,s=e.progress,o=e.loadAssetsOn,l=e.onAssetsLoaded,p=e.style,g=e.transition,f=e.transitionAlpha,x=e.textures,b=e.mask,k=b?"\n    float rand(vec2 n) {\n        return fract(sin(dot(n, vec2(12.9898 + seed, 4.1414))) * 43758.5453);\n    }\n\n    float noise(vec2 p) {\n        vec2 ip = floor(p);\n        vec2 u = fract(p);\n\n        u = u*u*(3.0-2.0*u);\n\n        float res = mix(\n            mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n            mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),\n            u.y\n        );\n\n        return res*res;\n    }\n\n    vec4 getMaskColor(vec2 uv) {\n        vec2 uw = convertToCoverUvs(uv, textureResolutions[0]);\n        return texture2D(textures[0], uw);\n    }\n\n    vec4 transition(vec2 uv) {\n        vec4 col = getToColor(uv);\n        vec4 maskCol = getMaskColor(uv);\n\n        // white => transparent\n        maskCol.a = (maskCol.r + maskCol.g + maskCol.b)/3.;\n\n        // debug mask\n        // return maskCol;\n\n        return mix(\n            vec4(0.),\n\n            col - ((col*0.1+vec4(vec3(0.1), 0.)) - (maskCol * ((1./progress))))\n                * (1. - (1./progress)) * 4.,\n\n            progress\n        );\n    }\n":g,w=a.a.useMemo(()=>b?[...x,b]:x,[b,x]),y=a.a.useRef(null),C=a.a.useRef(null),E=a.a.useState(!1),O=Object(c.a)(E,2),j=O[0],R=O[1],T=a.a.useState(null),A=Object(c.a)(T,2),P=A[0],I=A[1],N=a.a.useState({image:null,textures:[]}),S=Object(c.a)(N,2),_=S[0],z=S[1],D=a.a.useRef(null),B=Object(h.a)({ref:D}),F=a.a.useMemo(()=>1e3*Math.random(),[]);a.a.useEffect(()=>{("undefined"===typeof o||o)&&Object(m.a)(u.a.mark((function e(){var n,t,a,s,o,c;return u.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=new Promise(e=>{var n=new Image;n.onload=()=>{e(n)},n.src=r}),t=[],w.length>0&&(t=w.map(e=>new Promise(n=>{var t=new Image;t.onload=()=>{n(t)},t.src=e}))),e.next=5,Promise.all([n,...t]);case 5:a=e.sent,s=Object(v.a)(a),o=s[0],c=s.slice(1),z({image:o,textures:c}),l({width:o.width,height:o.height});case 11:case"end":return e.stop()}}),e)})))()},[r,w,o,l]),a.a.useEffect(()=>{if(!(j||!_.image||0===s||s>=1)){var e=C.current.getContext("webgl",{alpha:!0,antialias:!0,stencil:!1,preserveDrawingBuffer:!1});y.current=d()({gl:e}),R(!0)}},[j,_,s]),a.a.useEffect(()=>{if(j&&_.image){var e=y.current,n=e.texture({data:_.image,flipY:!0}),t=_.textures.reduce((n,t,r)=>Object(i.a)(Object(i.a)({},n),{},{["textures[".concat(r,"]")]:e.texture({data:t,flipY:!0})}),{}),r=_.textures.reduce((e,n,t)=>Object(i.a)(Object(i.a)({},e),{},{["textureResolutions[".concat(t,"]")]:[n.width,n.height]}),{}),a=e({frag:"\n                precision highp float;\n\n                uniform sampler2D image;\n                uniform vec2 resolution;\n                uniform vec2 imageResolution;\n                uniform float progress, seed;\n\n                ".concat(_.textures.length>0?"\n                    uniform sampler2D textures[".concat(_.textures.length,"];\n                    uniform vec2 textureResolutions[").concat(_.textures.length,"];\n                "):"",'\n\n                varying vec2 uv;\n\n                // draw image using "background-size: cover"-ish fill\n                // https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n                vec2 convertToCoverUvs(vec2 uv, vec2 imageRes) {\n                    vec2 s = resolution; // screen\n                    vec2 i = imageRes; // image\n\n                    float rs = s.x / s.y;\n                    float ri = i.x / i.y;\n\n                    vec2 new = rs < ri\n                        ? vec2(i.x * s.y / i.y, s.y)\n                        : vec2(s.x, i.y * s.x / i.x);\n\n                    vec2 offset = rs < ri\n                        ? vec2((new.x - s.x) / 2.0, 0.0) / new\n                        : vec2(0.0, (new.y - s.y) / 2.0) / new;\n\n                    vec2 uw = uv * s / new + offset;\n\n                    return uw;\n                }\n\n                vec4 getFromColor(vec2 st) {\n                    return vec4(0.);\n                }\n\n                vec4 getToColor(vec2 uv) {\n                    vec2 uw = convertToCoverUvs(uv, imageResolution);\n                    return texture2D(image, uw);\n                }\n\n                ').concat(k,"\n\n                void main () {\n                    gl_FragColor = transition(uv);\n                    ").concat(f?"gl_FragColor.a = progress;":"","\n                }\n            "),vert:"\n                precision highp float;\n\n                attribute vec2 position;\n                uniform vec2 resolution;\n                varying vec2 uv;\n\n                void main () {\n                    uv = 1. - position;\n                    gl_Position = vec4(1.0 - 2.0 * position, 0, 1);\n                }\n            ",attributes:{position:[-2,0,0,-2,2,2]},uniforms:Object(i.a)(Object(i.a)({progress:e.prop("progress"),resolution:e.prop("resolution"),seed:F,image:n,imageResolution:[_.image.width,_.image.height]},r),t),blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"src alpha",dstRGB:"one minus src alpha",dstAlpha:"one minus src alpha"}},depth:{enable:!1},count:3});I({drawImage:a})}},[j,_,F,f,k]),a.a.useEffect(()=>{if(j&&P&&0!==s){var e=y.current;e.clear({color:[0,0,0,0],depth:1}),P.drawImage({progress:s,resolution:[B.width,B.height]}),e&&s>=1&&(e.destroy(),y.current=null,R(!1))}},[j,P,s,B]);var M=Object(i.a)({position:"relative",width:"100%",height:"100%"},p),L={position:"absolute",top:"0",left:"0",width:"100%",height:"100%",backgroundImage:"url('".concat(r,"')"),backgroundSize:"cover",backgroundPosition:"center"};return a.a.createElement("div",{className:t,style:M,ref:D},s<=1&&a.a.createElement("div",{ref:n,style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}},a.a.createElement("canvas",{ref:C,width:B.width,height:B.height})),s>=1&&a.a.createElement("div",{style:L}))});x.propTypes={src:g.a.string.isRequired,progress:g.a.number.isRequired,loadAssetsOn:g.a.bool,onAssetsLoaded:g.a.func,className:g.a.string,style:g.a.objectOf(g.a.string),transition:g.a.string,transitionAlpha:g.a.bool,textures:g.a.arrayOf(g.a.string),mask:g.a.string},x.defaultProps={className:"",style:{},onAssetsLoaded:()=>{},transition:"\n    // https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\n\n    float rand(vec2 n) {\n        return fract(sin(dot(n, vec2(12.9898 + seed, 4.1414))) * 43758.5453);\n    }\n\n    float noise(vec2 p) {\n        vec2 ip = floor(p);\n        vec2 u = fract(p);\n\n        u = u*u*(3.0-2.0*u);\n\n        float res = mix(\n            mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n            mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),\n            u.y\n        );\n\n        return res*res;\n    }\n\n    vec4 transition(vec2 uv) {\n        vec4 col = getToColor(uv);\n\n        // generate blobby noise mask\n        float mask = pow(smoothstep(0.1, 1., clamp(noise(uv*4.) + noise(uv*3.5), 0.2, 1.)), 2.);\n        vec4 maskCol = vec4(vec3(mask), 1.);\n\n        // white => transparent\n        maskCol.a = (maskCol.r + maskCol.g + maskCol.b)/3.;\n\n        // debug mask\n        // return maskCol;\n\n        return mix(\n            vec4(0.),\n            col - ((col*0.1+vec4(vec3(0.1), 0.)) - (maskCol * ((1./progress))))\n                * (1. - (1./progress)) * 4.,\n            progress\n        );\n    }\n",transitionAlpha:!1,textures:[],mask:null};var b=x,k=t(16),w=t(17),y=t(4),C=t.n(y),E=t(5),O=t.n(E),j=t(15),R=t.n(j),T=({src:e,textures:n,mask:t,transition:r})=>{var s=Object(k.a)({threshold:0,triggerOnce:!0}),o=Object(c.a)(s,2),i=o[0],l=o[1],u=a.a.useState(!1),v=Object(c.a)(u,2),m=v[0],p=v[1],g=a.a.useCallback(()=>p(!0),[p]),f=l&&m;return a.a.createElement("div",{className:"image"},a.a.createElement(w.Spring,{config:{tension:180,friction:45,clamp:!0},to:{fadeProgress:f?1:0,scale:f?1:.9,yPos:f?0:80}},s=>a.a.createElement(b,{ref:i,src:e,loadAssetsOn:l,onAssetsLoaded:g,mask:t,textures:n,transition:r,progress:s.fadeProgress,style:{transform:"scale(".concat(s.scale,") translate3d(0, ").concat(s.yPos,"px, 0)")}})))},A=()=>a.a.createElement(a.a.Fragment,null,[...Array(2)].map((e,n)=>a.a.createElement("div",{className:"wrapper",key:n},a.a.createElement("h2",null,"Default transition"),a.a.createElement(T,{src:C.a}),a.a.createElement("h2",null,"Water"),a.a.createElement(T,{src:O.a,transition:"\n    const float amplitude = 30.;\n    const float speed = 10.;\n\n    vec4 transition(vec2 p) {\n        vec2 dir = p - vec2(.5);\n        float dist = length(dir);\n\n        if (dist > progress) {\n            return vec4(0.);\n        } else {\n            vec2 offset = dir * sin(dist * amplitude - progress * speed);\n            return getToColor( p + (offset * (1. - 1./progress)) );\n        }\n    }\n"}),a.a.createElement("h2",null,"Blur"),a.a.createElement(T,{src:O.a,transition:"\n    const float intensity = 0.3;\n    const int passes = 6;\n\n    vec4 transition(vec2 uv) {\n        vec4 c1 = vec4(0.0);\n        vec4 c2 = vec4(0.0);\n\n        float disp = intensity*(0.5-distance(0.5, progress));\n        for (int xi=0; xi<passes; xi++) {\n            float x = float(xi) / float(passes) - 0.5;\n            for (int yi=0; yi<passes; yi++) {\n                float y = float(yi) / float(passes) - 0.5;\n                vec2 v = vec2(x,y);\n                float d = disp;\n                c2 += getToColor( uv + d*v);\n            }\n        }\n\n        c2 /= float(passes*passes);\n        return mix(c1, c2, progress);\n    }\n"}),a.a.createElement("h2",null,"Image mask"),a.a.createElement(T,{src:O.a,mask:R.a}),a.a.createElement("h2",null,"Glitch"),a.a.createElement(T,{src:C.a,transition:"\n    vec4 transition(vec2 p) {\n        vec2 block = floor(p.xy / vec2(16));\n        vec2 uv_noise = block / vec2(64);\n        uv_noise += floor(vec2(progress) * vec2(1200.0, 3500.0)) / vec2(64);\n        vec2 dist = progress > 0.0 ? (fract(uv_noise) - 0.5) * 0.3 *(1.0 -progress) : vec2(0.0);\n\n        vec2 red = p + dist * 0.2;\n        vec2 green = p + dist * .3;\n        vec2 blue = p + dist * .5;\n\n        return vec4(\n            getToColor(red).r,\n            getToColor(green).g,\n            getToColor(blue).b,\n            1.0\n        );\n    }\n"}),a.a.createElement("h2",null,"Polka"),a.a.createElement(T,{src:O.a,transition:"\n    const float SQRT_2 = 1.414213562373;\n\n    float dots = 20.0;\n    vec2 center = vec2(0, 0);\n\n    vec4 transition(vec2 uv) {\n        bool nextImage = distance(fract(uv * dots), vec2(0.5, 0.5)) < ( progress / distance(uv, center));\n        return nextImage ? getToColor(uv) : getFromColor(uv);\n    }\n"}),a.a.createElement("h2",null,"Noise swirl"),a.a.createElement(T,{src:C.a,transition:"\n    float rand(vec2 n) {\n        return fract(sin(dot(n, vec2(12.9898 + seed, 4.1414))) * 43758.5453);\n    }\n\n    float noise(vec2 p){\n        vec2 ip = floor(p);\n        vec2 u = fract(p);\n\n        u = u*u*(3.0-2.0*u);\n\n        float res = mix(\n            mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n            mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),\n            u.y\n        );\n\n        return res*res;\n    }\n\n    vec4 transition(vec2 uv) {\n        return getToColor(uv + (noise(uv*4.)*(1. - (1./progress))));\n    }\n"}),a.a.createElement("h2",null,"Random squares"),a.a.createElement(T,{src:C.a,transition:"\n    const ivec2 size = ivec2(10, 10);\n    const float smoothness = 0.5;\n\n    float rand (vec2 co) {\n        return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n\n    vec4 transition(vec2 p) {\n        float r = rand(floor(vec2(size) * p));\n        float m = smoothstep(0.0, -smoothness, r - (progress * (1.0 + smoothness)));\n        return mix(vec4(0.), getToColor(p), m);\n    }\n"}))));o.a.render(a.a.createElement(A,null),document.getElementById("root"))},4:function(e,n,t){e.exports=t.p+"static/media/cat2.03e391d0.png"},5:function(e,n,t){e.exports=t.p+"static/media/cat3.70aaec79.jpg"}},[[19,1,2]]]);
//# sourceMappingURL=main.9093295d.chunk.js.map